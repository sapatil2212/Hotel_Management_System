generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model booking {
  id              String     @id
  guestName       String
  guestEmail      String
  guestPhone      String
  checkIn         DateTime
  checkOut        DateTime
  nights          Int
  adults          Int        @default(1)
  children        Int        @default(0)
  totalAmount     Float
  status          String     @default("pending")
  source          String     @default("Website")
  specialRequests String?    @db.Text
  roomId          String
  promoCodeId     String?
  originalAmount  Float?
  discountAmount  Float?
  baseAmount      Float?
  gstAmount       Float?     @default(0.0)
  serviceTaxAmount Float?    @default(0.0)
  otherTaxAmount  Float?     @default(0.0)
  totalTaxAmount  Float?     @default(0.0)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime
  room            rooms      @relation(fields: [roomId], references: [id], map: "Booking_roomId_fkey")
  promoCode       promocode? @relation(fields: [promoCodeId], references: [id], map: "Booking_promoCodeId_fkey")

  @@index([roomId], map: "Booking_roomId_fkey")
  @@index([promoCodeId], map: "Booking_promoCodeId_fkey")
}

model category {
  id               String   @id
  name             String   @unique(map: "Category_name_key")
  slug             String   @unique(map: "Category_slug_key")
  createdAt        DateTime @default(now())
  updatedAt        DateTime
  aboutMore        String?  @db.Text
  aboutShort       String?
  aboutTitle       String?
  contactAddress   String?  @db.Text
  contactEmail     String?
  contactPhone     String?
  faqs             Json?
  mapDirectionsUrl String?
  mapEmbedUrl      String?  @db.Text
  partners         Json?
  propertyFeatures Json?
  reviews          Json?
  room             room[]
}

model emailotp {
  id        String   @id
  email     String   @unique(map: "EmailOTP_email_key")
  code      String
  purpose   String   @default("register")
  expiresAt DateTime
  attempts  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model hotelinfo {
  id                    String   @id
  name                  String
  tagline               String?
  description           String?  @db.Text
  starRating            Int      @default(5)
  overallRating         Float    @default(4.5)
  reviewCount           Int      @default(0)
  primaryPhone          String?
  whatsappPhone         String?
  primaryEmail          String?
  reservationEmail      String?
  address               String?  @db.Text
  emergencyContact      String?
  googleMapsEmbedCode   String?  @db.Text
  latitude              Float?
  longitude             Float?
  directionsUrl         String?
  nearbyAttractions     Json?
  distanceFromKeyPlaces Json?
  checkInTime           String?  @default("3:00 PM")
  checkOutTime          String?  @default("11:00 AM")
  cancellationPolicy    String?  @db.Text
  petPolicy             String?  @db.Text
  smokingPolicy         String?  @db.Text
  bookingPartners       Json?
  partnerLogos          Json?
  propertyAmenities     Json?
  businessFacilities    Json?
  safetyFeatures        Json?
  services              Json?
  gstNumber             String?
  gstPercentage         Float?   @default(18.0)
  serviceTaxPercentage  Float?   @default(0.0)
  otherTaxes            Json?
  taxEnabled            Boolean  @default(true)
  createdAt             DateTime @default(now())
  updatedAt             DateTime
  guestPolicies         String?  @db.Text
  faqs                  Json?
}

model room {
  id               String    @id
  name             String
  slug             String    @unique(map: "Room_slug_key")
  price            Int
  description      String    @db.Text
  shortDescription String
  images           Json
  amenities        Json
  maxGuests        Int
  size             String
  bedType          String
  available        Boolean   @default(true)
  features         Json
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
  categoryId       String?
  totalRooms       Int       @default(1)
  bathroomCount    Int       @default(1)
  cancellationFree Boolean   @default(true)
  currency         String    @default("INR")
  discountPercent  Float?
  floorNumber      Int?
  highlights       String?   @db.Text
  instantBooking   Boolean   @default(true)
  isPromoted       Boolean   @default(false)
  keywords         Json?
  metaDescription  String?
  metaTitle        String?
  originalPrice    Int?
  roomNumber       String?
  viewType         String?
  rooms            rooms[]
  category         category? @relation(fields: [categoryId], references: [id], map: "Room_categoryId_fkey")

  @@index([categoryId], map: "Room_categoryId_fkey")
  @@map("room_types")
}

model rooms {
  id           String                    @id
  roomNumber   String                    @unique
  roomTypeId   String
  status       rooms_status              @default(available)
  floorNumber  Int?
  notes        String?                   @db.Text
  createdAt    DateTime                  @default(now())
  updatedAt    DateTime
  roomType     room                      @relation(fields: [roomTypeId], references: [id], map: "Rooms_roomTypeId_fkey")
  bookings     booking[]

  @@index([roomTypeId], map: "Rooms_roomTypeId_fkey")
}

model user {
  id              String    @id
  name            String
  email           String    @unique(map: "User_email_key")
  phone           String
  role            user_role
  passwordHash    String
  emailVerifiedAt DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime
}

enum user_role {
  OWNER
  ADMIN
  RECEPTION
}

model promocode {
  id              String                @id
  code            String                @unique
  title           String
  description     String?               @db.Text
  discountType    promocode_discount_type
  discountValue   Float
  minOrderAmount  Float?
  maxDiscountAmount Float?
  usageLimit      Int?
  usedCount       Int                   @default(0)
  isActive        Boolean               @default(true)
  validFrom       DateTime
  validUntil      DateTime
  applicableRooms Json?                 // Array of room IDs or "all"
  createdAt       DateTime              @default(now())
  updatedAt       DateTime
  bookings        booking[]
}

enum promocode_discount_type {
  percentage
  fixed
}

enum rooms_status {
  available
  occupied
  maintenance
  reserved
  cleaning
}
